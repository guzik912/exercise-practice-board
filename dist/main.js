!function(t){var e={};function o(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)o.d(n,r,function(e){return t[e]}.bind(null,r));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}([function(t,e,o){"use strict";o.r(e);const n=[{name:"Reverse this",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Validation",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Interleaved",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Predicate",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Pangram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"In two steps",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Emoji",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Duration time",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Factory",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"The one to rule them all",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Thing inside the box",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Mr. Eliot",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Izogram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Hashtags",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Array functions",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Count the words",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Anagram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Verify ISBN",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Brockets to fit",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Flat board",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"HTML String",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Anagram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Caesar cipher",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Verify Card",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Abstract Syntax Trees",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"}],r=(()=>{const t={modal:".modal",modalActive:"modal-isActive",exerciseName:".exercise-name",exerciseDesc:".exercise-description",exerciseDescItem:"exercise-description__item",exerciseInput:".input",exerciseOutput:".output",exerciseItem:".exercise",btnCloseModal:".modal-close"},{modal:e,modalActive:o,exerciseName:n,exerciseDesc:r,exerciseDescItem:i,exerciseInput:l,exerciseOutput:s}=t;return{openModal:()=>{document.querySelector(e).classList.add(o)},closeModal:()=>{document.querySelector(e).classList.remove(o)},renderModal:({name:t,description:e,input:o,output:u,solution:p})=>{const c=e.split(".");let f="";c.forEach((t,e)=>f+=`<li class=${i}>${e+1}. ${t}</li>`),document.querySelector(n).textContent=t,document.querySelector(r).innerHTML=f,document.querySelector(l).textContent=o,document.querySelector(s).textContent=u},getSelectors:t}})(),i=r.getSelectors,l=document.querySelector(i.btnCloseModal),s=document.querySelectorAll(i.exerciseItem),u=t=>{let e=t.target.textContent;n.forEach(t=>{if(t.name===e)return r.renderModal(t),void r.openModal()})};s.forEach(t=>t.addEventListener("click",u)),l.addEventListener("click",()=>{r.closeModal()})}]);