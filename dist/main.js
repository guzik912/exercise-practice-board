!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const o=[{name:"Reverse this",description:"Implement function which reverse input. Argument type should be a string. In case there is different type, function return error",input:"Hello world!",output:"dlrow olleH!",solutionLink:null},{name:"Validation",description:"Implement function which will check if the password is correct. Minimun length - 3, maximum length - 10. Password should include one of !,@,# and digit",input:"Correct!",output:"true",solutionLink:null},{name:"Interleaved",description:"Implement function which will interleave two passed arguments. Argument type should be number. Function will return one string",input:"(111, 222)",output:"121212",solutionLink:null},{name:"Predicate",description:"Implement function which will return new array with with passed arguments. First parameter is array, second is callback. Dont use filter and map methods",input:"[1,2,3], el => el > 2",output:"[3]",solutionLink:null},{name:"Pangram",description:"Implement function which will check the parameter. Parameter should contain all of alphabetical letters. Each letter should appear only once",input:"test",output:"false",solutionLink:null},{name:"In two steps",description:"Implement function which will return second function which add prefix to parameter. The function should be higher order function",input:"(name('Jhon'), Hello",output:"Hello Jhon",solutionLink:null},{name:"Emoji",description:"Implement function which will replace all words with words from emoji object. Example: 'stop':'ðŸš«' ",input:"Please, stop now!",output:"Please, ðŸš« now",solutionLink:null},{name:"Duration time",description:"Implement function which will count of all time from object. Time should be shared for 3 modules. Below example output ",input:"any object with times",output:"total: 10h 20m 13s",solutionLink:null},{name:"Factory",description:"Implement function in which any variable is available as value. Example: function fn(){ const something = 'Super!'}",input:"fn().something",output:"Super!",solutionLink:null},{name:"The one to rule them all",description:"Implement function which will concatenate all parameters into one array or string",input:"[1,2], [3,4]",output:"[1,2,3,4]",solutionLink:null},{name:"Thing inside the box",description:"Implement function which will check if box is empty. Please check example input/output in solution",input:"",output:"",solutionLink:null},{name:"Mr. Eliot",description:"Implement function which will change text by example below",input:"hacker",output:"h4ck3r",solutionLink:null},{name:"Izogram",description:"Implement function which will check if word is isogram. Isogram is a word which each letter appear once",input:"isogram",output:"true",solutionLink:null},{name:"Hashtags",description:"Implement function which will find hashtags in the sentence. If the hashtag is found, that word will be returned without the hashtag",input:"Best language is #JS",output:"JS",solutionLink:null},{name:"Array functions",description:"Implement your own function length and filter. You cannot use length and filter methods",input:"[1,2], el => el === 2",output:"[2]",solutionLink:null},{name:"Count the words",description:"Implement function which count the words in the sentence. Ignore fact it is lower or upper case",input:"Hi hi, JS",output:"Hi: 2, JS: 1",solutionLink:null},{name:"Anagram",description:"Implement function which will change word to Anagram. Please find more information online",input:"lane",output:"lean",solutionLink:null},{name:"Verify ISBN",description:"Implement function which will generate code of book by schema. Please look into solution for check more information. Below example output",input:"23-222-22",output:"true",solutionLink:null},{name:"Brockets to fit",description:"Implement function which will check correct location of brackets. For example each kind of brackets should be together: ({}) - true, {(}) - false",input:"({})",output:"true",solutionLink:null},{name:"Flat board",description:"Implement function which will return array with each value from nested arrays",input:"[1,[2,2,3]]",output:"[1,2,3]",solutionLink:null},{name:"HTML String",description:"Implement function which will convert AST to HTML String. Check more information online",input:"",output:"",solutionLink:null},{name:"Caesar cipher",description:"Implement program which will move each letter every 13 letters",input:"ABC",output:"NOP",solutionLink:null},{name:"Verify Card",description:"Implement program which will verify by looking at the code and return from which bank is a card",input:"12-2342-12",output:"World bank",solutionLink:null},{name:"Abstract Syntax Trees",description:"Implement program which will convert AST code to HTLM String.",input:"",output:"",solutionLink:null}],i=(()=>{const e={modal:".modal",modalActive:"modal--isActive",exerciseName:".exercise-name",exerciseDesc:".exercise-description",exerciseDescItem:"exercise-description__item",exerciseInput:".input",exerciseOutput:".output",exerciseItem:".exercise",exerciseSolution:".exercise-solution",exerciseSolutionCode:".exercise-code",exerciseSolutionActive:"exercise-solution--isActive",btnCheckSolution:".btn--solution",btnCloseModal:".btn--modal-close"},{modal:t,modalActive:n,exerciseName:o,exerciseDesc:i,exerciseDescItem:l,exerciseInput:r,exerciseOutput:u,exerciseSolution:c,exerciseSolutionCode:s,exerciseSolutionActive:a,btnCheckSolution:m}=e;return{showModal:()=>{document.querySelector(t).classList.add(n),document.body.style.position="fixed"},closeModal:()=>{document.querySelector(t).classList.remove(n),document.body.style.position=""},renderModal:({name:e,description:t,input:n,output:c,solutionLink:s})=>{const a=t.split(".");let m="";a.forEach((e,t)=>m+=`<li class=${l}>${t+1}. ${e}</li>`),document.querySelector(o).textContent=e,document.querySelector(i).innerHTML=m,document.querySelector(r).textContent=n,document.querySelector(u).textContent=c},showOrHideSolution:()=>{document.querySelector(c).classList.toggle(a)},getSelectors:e}})(),l=i.getSelectors,r=document.querySelector(l.btnCloseModal),u=document.querySelector(l.btnCheckSolution),c=document.querySelectorAll(l.exerciseItem),s=e=>{let t=e.target.textContent;o.forEach(e=>{if(e.name===t)return i.renderModal(e),void i.showModal()})};c.forEach(e=>e.addEventListener("click",s)),r.addEventListener("click",()=>{i.closeModal(),document.querySelector(l.exerciseSolution).classList.remove(l.exerciseSolutionActive)}),u.addEventListener("click",()=>{i.showOrHideSolution()})}]);