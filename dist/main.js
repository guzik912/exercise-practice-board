!function(e){var t={};function o(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(n,i,function(t){return e[t]}.bind(null,i));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";o.r(t);const n=[{name:"Reverse this",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"\n      <h1>Hello world</h1>\n      <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolores dolor beatae nostrum ipsum minus in quos iste sed voluptates est?</p>\n      <footer>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sit, maxime.</footer>\n    "},{name:"Validation",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Interleaved",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Predicate",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Pangram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"In two steps",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Emoji",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Duration time",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Factory",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"The one to rule them all",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Thing inside the box",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Mr. Eliot",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Izogram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Hashtags",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Array functions",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Count the words",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Anagram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Verify ISBN",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Brockets to fit",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Flat board",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"HTML String",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Anagram",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Caesar cipher",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Verify Card",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"},{name:"Abstract Syntax Trees",description:"Implement function which reverse input of type string. Function should verify if type of argument is string. If it's not a type of string throw error.",input:"Hello world!",output:"dlrow olleH!",solution:"My own code"}],i=(()=>{const e={modal:".modal",modalActive:"modal--isActive",exerciseName:".exercise-name",exerciseDesc:".exercise-description",exerciseDescItem:"exercise-description__item",exerciseInput:".input",exerciseOutput:".output",exerciseItem:".exercise",exerciseSolution:".exercise-solution",exerciseSolutionCode:".exercise-code",exerciseSolutionActive:"exercise-solution--isActive",btnToggleSolution:".btn--solution",btnCloseModal:".btn--modal-close"},{modal:t,modalActive:o,exerciseName:n,exerciseDesc:i,exerciseDescItem:r,exerciseInput:s,exerciseOutput:l,exerciseSolution:u,exerciseSolutionCode:c,exerciseSolutionActive:p}=e;return{showModal:()=>{document.querySelector(t).classList.add(o),document.body.style.position="fixed"},closeModal:()=>{document.querySelector(t).classList.remove(o),document.body.style.position=""},renderModal:({name:e,description:t,input:o,output:u,solution:p})=>{const f=t.split(".");let d="";f.forEach((e,t)=>d+=`<li class=${r}>${t+1}. ${e}</li>`),document.querySelector(n).textContent=e,document.querySelector(i).innerHTML=d,document.querySelector(s).textContent=o,document.querySelector(l).textContent=u,document.querySelector(c).textContent=p},showOrHideSolution:()=>{document.querySelector(u).classList.toggle(p)},getSelectors:e}})(),r=i.getSelectors,s=document.querySelector(r.btnCloseModal),l=document.querySelector(r.btnToggleSolution),u=document.querySelectorAll(r.exerciseItem),c=e=>{let t=e.target.textContent;n.forEach(e=>{if(e.name===t)return i.renderModal(e),void i.showModal()})};u.forEach(e=>e.addEventListener("click",c)),s.addEventListener("click",()=>{i.closeModal(),document.querySelector(r.exerciseSolution).classList.remove(r.exerciseSolutionActive)}),l.addEventListener("click",()=>{i.showOrHideSolution()})}]);